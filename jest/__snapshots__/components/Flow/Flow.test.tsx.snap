// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Flow renders a snapshot 1`] = `
.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 2.988rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c5 {
  font-size: 16px;
  font-family: Lato,sans-serif;
  line-height: 1.5;
  font-size: 24px;
  font-size: 1.5em;
  margin: 0;
}

.c5 a {
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: bold;
}

.c1 {
  -webkit-box-flex: unset;
  -webkit-flex-grow: unset;
  -ms-flex-positive: unset;
  flex-grow: unset;
  padding: 0 0 4.6875rem 0;
  border-top: none;
}

.c1 .c4 {
  margin-top: 0;
}

.c2 {
  width: 100%;
  margin: 0 auto;
  padding: 0 15px;
  box-sizing: border-box;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 0.9rem;
  height: 0.9rem;
  margin-right: 0.6rem;
  border-radius: 50%;
}

.c9 {
  width: 0.49rem;
  height: 0.49rem;
  border-radius: 50%;
}

@media (min-width:400px) {
  .c5 {
    font-size: calc(14.67px + 0.33vw);
  }
}

@media (min-width:1000px) {
  .c5 {
    font-size: 18px;
  }
}

@media (min-width:400px) {
  .c5 {
    font-size: calc(16.00px + 2.00vw);
  }
}

@media (min-width:1000px) {
  .c5 {
    font-size: 36px;
  }
}

@media screen and (max-width:35.9375rem) {
  .c2 {
    max-width: 100%;
  }
}

@media screen and (min-width:36rem) {
  .c2 {
    max-width: 540px;
  }
}

@media screen and (min-width:48rem) {
  .c2 {
    max-width: 720px;
  }
}

@media screen and (min-width:62rem) {
  .c2 {
    max-width: 960px;
  }
}

@media screen and (min-width:75rem) {
  .c2 {
    max-width: 1140px;
  }
}

<Flow
  components={
    Array [
      Object {
        "Component": [Function],
        "title": "Foo",
      },
    ]
  }
  injectedProps={Object {}}
  onDone={[MockFunction]}
>
  <Page>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Page-sc-9vbw2h-0",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "display:flex;flex-direction:column;flex-grow:1;",
            ],
          },
          "displayName": "Page",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Page-sc-9vbw2h-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Section
          paddingTop={false}
        >
          <StyledSection__SectionContainer
            paddingTop={false}
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "StyledSection__SectionContainer-sc-19w4t7t-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "flex-grow:",
                      [Function],
                      ";padding:",
                      [Function],
                      ";background:",
                      [Function],
                      ";border-top:",
                      [Function],
                      ";& ",
                      ".c4",
                      "{margin-top:0;}",
                    ],
                  },
                  "displayName": "StyledSection__SectionContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "StyledSection__SectionContainer-sc-19w4t7t-0",
                  "target": "section",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              paddingTop={false}
            >
              <section
                className="c1"
              >
                <Container>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Container-sc-1to8ndn-0",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "width:100%;margin:0 auto;padding:0 15px;box-sizing:border-box;",
                            "@media screen and (max-width:",
                            "35.9375",
                            "rem){",
                            "
    max-width: 100%;
  ",
                            "}",
                            " ",
                            "@media screen and (min-width:",
                            "36",
                            "rem){",
                            "
    max-width: 540px;
  ",
                            "}",
                            " ",
                            "@media screen and (min-width:",
                            "48",
                            "rem){",
                            "
    max-width: 720px;
  ",
                            "}",
                            " ",
                            "@media screen and (min-width:",
                            "62",
                            "rem){",
                            "
    max-width: 960px;
  ",
                            "}",
                            " ",
                            "@media screen and (min-width:",
                            "75",
                            "rem){",
                            "
    max-width: 1140px;
  ",
                            "}",
                          ],
                        },
                        "displayName": "Container",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Container-sc-1to8ndn-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <StyledFlow__FlowHeader
                        smallHeading={false}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "StyledFlow__FlowHeader-ijagdx-1",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;justify-content:space-between;margin-bottom:",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "StyledFlow__FlowHeader",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "StyledFlow__FlowHeader-ijagdx-1",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          smallHeading={false}
                        >
                          <div
                            className="c3"
                          >
                            <Heading
                              as="h2"
                              noMargin={true}
                            >
                              <StyledComponent
                                as="h2"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "_foldedDefaultProps": Object {
                                      "as": "h1",
                                    },
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
  ",
                                        "font-size: 16px;",
                                        "@media (min-width: 400px) {",
                                        "font-size: calc(14.67px + 0.33vw);",
                                        "}",
                                        "@media (min-width: 1000px) {",
                                        "font-size: 18px;",
                                        "}",
                                        ";
  font-family: Lato, sans-serif;
  line-height: 1.5;
  ",
                                        [Function],
                                        ";
  ",
                                        [Function],
                                        ";
  a {
    color: ",
                                        [Function],
                                        ";
    text-decoration: none;
    font-weight: bold;

    /* stylelint-disable-next-line max-nesting-depth */
    :hover {
      color: ",
                                        [Function],
                                        ";
    }
  }
",
                                        "
  color: ",
                                        [Function],
                                        ";
  font-size: ",
                                        [Function],
                                        ";
",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "Heading",
                                    "foldedComponentIds": Array [
                                      "sc-bdVaJa",
                                      "sc-ifAKCX",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "p",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                noMargin={true}
                              >
                                <h2
                                  className="c4 c5"
                                >
                                  Foo
                                </h2>
                              </StyledComponent>
                            </Heading>
                            <StyledFlow__StepperContainer>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "StyledFlow__StepperContainer-ijagdx-0",
                                      "isStatic": true,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "display:flex;justify-content:flex-end;",
                                      ],
                                    },
                                    "displayName": "StyledFlow__StepperContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "StyledFlow__StepperContainer-ijagdx-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c6"
                                >
                                  <Stepper
                                    current={0}
                                    total={1}
                                  >
                                    <StyledStepper__StepperContainer>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "StyledStepper__StepperContainer-sc-1y83how-0",
                                              "isStatic": true,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "display:flex;align-items:center;",
                                              ],
                                            },
                                            "displayName": "StyledStepper__StepperContainer",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "StyledStepper__StepperContainer-sc-1y83how-0",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="c7"
                                        >
                                          <StyledStepper
                                            key="0"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "StyledStepper-sc-1y83how-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      "display:flex;align-items:center;justify-content:center;width:0.9rem;height:0.9rem;margin-right:0.6rem;background:",
                                                      [Function],
                                                      ";border-radius:50%;",
                                                    ],
                                                  },
                                                  "displayName": "StyledStepper",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "StyledStepper-sc-1y83how-1",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="c8"
                                              >
                                                <StyledStepper__ActiveStep>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "StyledStepper__ActiveStep-sc-1y83how-3",
                                                          "isStatic": false,
                                                          "lastClassName": "c9",
                                                          "rules": Array [
                                                            "width:0.49rem;height:0.49rem;background:",
                                                            [Function],
                                                            ";border-radius:50%;",
                                                          ],
                                                        },
                                                        "displayName": "StyledStepper__ActiveStep",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "StyledStepper__ActiveStep-sc-1y83how-3",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="c9"
                                                    />
                                                  </StyledComponent>
                                                </StyledStepper__ActiveStep>
                                              </div>
                                            </StyledComponent>
                                          </StyledStepper>
                                        </div>
                                      </StyledComponent>
                                    </StyledStepper__StepperContainer>
                                  </Stepper>
                                </div>
                              </StyledComponent>
                            </StyledFlow__StepperContainer>
                          </div>
                        </StyledComponent>
                      </StyledFlow__FlowHeader>
                      <TestComponent
                        onNext={[Function]}
                      />
                    </div>
                  </StyledComponent>
                </Container>
              </section>
            </StyledComponent>
          </StyledSection__SectionContainer>
        </Section>
      </div>
    </StyledComponent>
  </Page>
</Flow>
`;

exports[`Flow renders a snapshot 2`] = `
.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 2.988rem;
}

.c2 {
  font-size: 16px;
  font-family: Lato,sans-serif;
  line-height: 1.5;
  font-size: 24px;
  font-size: 1.5em;
  margin: 0;
}

.c2 a {
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: bold;
}

.c7 .c1 {
  margin-top: 0;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 0.9rem;
  height: 0.9rem;
  margin-right: 0.6rem;
  border-radius: 50%;
}

.c6 {
  width: 0.49rem;
  height: 0.49rem;
  border-radius: 50%;
}

@media (min-width:400px) {
  .c2 {
    font-size: calc(14.67px + 0.33vw);
  }
}

@media (min-width:1000px) {
  .c2 {
    font-size: 18px;
  }
}

@media (min-width:400px) {
  .c2 {
    font-size: calc(16.00px + 2.00vw);
  }
}

@media (min-width:1000px) {
  .c2 {
    font-size: 36px;
  }
}

<Flow
  components={
    Array [
      Object {
        "Component": [Function],
        "title": "Foo",
      },
    ]
  }
  injectedProps={Object {}}
  onDone={[MockFunction]}
  page={false}
>
  <StyledFlow__FlowHeader
    smallHeading={false}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "StyledFlow__FlowHeader-ijagdx-1",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:flex;justify-content:space-between;margin-bottom:",
              [Function],
              ";",
            ],
          },
          "displayName": "StyledFlow__FlowHeader",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "StyledFlow__FlowHeader-ijagdx-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      smallHeading={false}
    >
      <div
        className="c0"
      >
        <Heading
          as="h2"
          noMargin={true}
        >
          <StyledComponent
            as="h2"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "_foldedDefaultProps": Object {
                  "as": "h1",
                },
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "c1",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  ",
                    "font-size: 16px;",
                    "@media (min-width: 400px) {",
                    "font-size: calc(14.67px + 0.33vw);",
                    "}",
                    "@media (min-width: 1000px) {",
                    "font-size: 18px;",
                    "}",
                    ";
  font-family: Lato, sans-serif;
  line-height: 1.5;
  ",
                    [Function],
                    ";
  ",
                    [Function],
                    ";
  a {
    color: ",
                    [Function],
                    ";
    text-decoration: none;
    font-weight: bold;

    /* stylelint-disable-next-line max-nesting-depth */
    :hover {
      color: ",
                    [Function],
                    ";
    }
  }
",
                    "
  color: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
",
                    [Function],
                    ";",
                  ],
                },
                "displayName": "Heading",
                "foldedComponentIds": Array [
                  "sc-bdVaJa",
                  "sc-ifAKCX",
                ],
                "render": [Function],
                "styledComponentId": "c1",
                "target": "p",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            noMargin={true}
          >
            <h2
              className="c1 c2"
            >
              Foo
            </h2>
          </StyledComponent>
        </Heading>
        <StyledFlow__StepperContainer>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "StyledFlow__StepperContainer-ijagdx-0",
                  "isStatic": true,
                  "lastClassName": "c3",
                  "rules": Array [
                    "display:flex;justify-content:flex-end;",
                  ],
                },
                "displayName": "StyledFlow__StepperContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "StyledFlow__StepperContainer-ijagdx-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            >
              <Stepper
                current={0}
                total={1}
              >
                <StyledStepper__StepperContainer>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledStepper__StepperContainer-sc-1y83how-0",
                          "isStatic": true,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;align-items:center;",
                          ],
                        },
                        "displayName": "StyledStepper__StepperContainer",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledStepper__StepperContainer-sc-1y83how-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                    >
                      <StyledStepper
                        key="0"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "StyledStepper-sc-1y83how-1",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "display:flex;align-items:center;justify-content:center;width:0.9rem;height:0.9rem;margin-right:0.6rem;background:",
                                  [Function],
                                  ";border-radius:50%;",
                                ],
                              },
                              "displayName": "StyledStepper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "StyledStepper-sc-1y83how-1",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c5"
                          >
                            <StyledStepper__ActiveStep>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "StyledStepper__ActiveStep-sc-1y83how-3",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "width:0.49rem;height:0.49rem;background:",
                                        [Function],
                                        ";border-radius:50%;",
                                      ],
                                    },
                                    "displayName": "StyledStepper__ActiveStep",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "StyledStepper__ActiveStep-sc-1y83how-3",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c6"
                                />
                              </StyledComponent>
                            </StyledStepper__ActiveStep>
                          </div>
                        </StyledComponent>
                      </StyledStepper>
                    </div>
                  </StyledComponent>
                </StyledStepper__StepperContainer>
              </Stepper>
            </div>
          </StyledComponent>
        </StyledFlow__StepperContainer>
      </div>
    </StyledComponent>
  </StyledFlow__FlowHeader>
  <TestComponent
    onNext={[Function]}
  />
</Flow>
`;
